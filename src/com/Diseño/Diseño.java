package com.Diseño;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.ParseException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import org.apache.commons.validator.routines.EmailValidator;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author frany
 */
public class Diseño extends javax.swing.JFrame {
    //Objetos necesarios para la conexión a la base de datos
    //En este objeto se almacena la ubicación del archivo donde se encuetra la base de datos.
    String url = "jdbc:sqlite:C:\\Diseño\\src\\BaseDeDatos\\BDProyecto.db";
    //Objeto necesario para realizar la conexión.
    Connection connect;

    /**
     * Creates new form Diseño
     */
    public Diseño() {
        initComponents();
        //Hace que el Jframe inicie en el centro de la pantalla
        this.setLocationRelativeTo(this);
        //Metodo para Mostar los datos en el Jtable
        mostrarDatos();
        //Hace invisible el label de aviso
        lblAviso.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Bg = new javax.swing.JPanel();
        BordeSuperior = new javax.swing.JPanel();
        Exitbtn = new javax.swing.JLabel();
        lblMinimizar = new javax.swing.JLabel();
        Perfil1 = new javax.swing.JLabel();
        Usuario1 = new javax.swing.JLabel();
        Rol1 = new javax.swing.JLabel();
        BordeLateralIzquierdo = new javax.swing.JPanel();
        Matricula = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        IngreNombre = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        Nombre = new javax.swing.JLabel();
        IngreApellido = new javax.swing.JTextField();
        Apellido = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        IngreCorreo = new javax.swing.JTextField();
        Correo = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        Materia = new javax.swing.JLabel();
        IngreMateria = new javax.swing.JTextField();
        LimpiarPanel = new javax.swing.JPanel();
        Limpiarbtn = new javax.swing.JLabel();
        lblAviso = new javax.swing.JLabel();
        IngreMatricula = new javax.swing.JFormattedTextField();
        BordeInferior = new javax.swing.JPanel();
        PanelCrear = new javax.swing.JPanel();
        btnCrear = new javax.swing.JLabel();
        PanelBuscar = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JLabel();
        PanelEliminar = new javax.swing.JPanel();
        BtnEliminar = new javax.swing.JLabel();
        PanelModificar = new javax.swing.JPanel();
        BtnModificar = new javax.swing.JLabel();
        PanelListar = new javax.swing.JPanel();
        btnListar = new javax.swing.JLabel();
        Buscar = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        Filtro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diseño");
        setUndecorated(true);
        setResizable(false);

        Bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BordeSuperior.setBackground(new java.awt.Color(0, 0, 0));
        BordeSuperior.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BordeSuperior.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BordeSuperiorMouseDragged(evt);
            }
        });
        BordeSuperior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BordeSuperiorMousePressed(evt);
            }
        });

        Exitbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cerrar-sesion.png"))); // NOI18N
        Exitbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exitbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitbtnMouseEntered(evt);
            }
        });

        lblMinimizar.setFont(new java.awt.Font("Roboto Black", 1, 48)); // NOI18N
        lblMinimizar.setForeground(new java.awt.Color(255, 255, 255));
        lblMinimizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimizar.setText("−");
        lblMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseExited(evt);
            }
        });

        Perfil1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Usuario2.png"))); // NOI18N
        Perfil1.setText("jLabel1");

        Usuario1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Usuario1.setForeground(new java.awt.Color(255, 255, 255));
        Usuario1.setText("Usuario");

        Rol1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Rol1.setForeground(new java.awt.Color(255, 255, 255));
        Rol1.setText("Rol");

        javax.swing.GroupLayout BordeSuperiorLayout = new javax.swing.GroupLayout(BordeSuperior);
        BordeSuperior.setLayout(BordeSuperiorLayout);
        BordeSuperiorLayout.setHorizontalGroup(
            BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BordeSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Perfil1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Rol1)
                    .addComponent(Usuario1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 787, Short.MAX_VALUE)
                .addComponent(lblMinimizar)
                .addGap(18, 18, 18)
                .addComponent(Exitbtn)
                .addContainerGap())
        );
        BordeSuperiorLayout.setVerticalGroup(
            BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BordeSuperiorLayout.createSequentialGroup()
                .addGroup(BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BordeSuperiorLayout.createSequentialGroup()
                        .addGroup(BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BordeSuperiorLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(Exitbtn))
                            .addGroup(BordeSuperiorLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Usuario1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BordeSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Rol1)
                                    .addComponent(lblMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(BordeSuperiorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Perfil1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Bg.add(BordeSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        BordeLateralIzquierdo.setBackground(new java.awt.Color(51, 102, 255));

        Matricula.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Matricula.setText("Matricula");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        IngreNombre.setBackground(new java.awt.Color(51, 102, 255));
        IngreNombre.setForeground(new java.awt.Color(204, 204, 204));
        IngreNombre.setText("Ingrese el nombre");
        IngreNombre.setBorder(null);
        IngreNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngreNombreMousePressed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        Nombre.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Nombre.setText("Nombre");

        IngreApellido.setBackground(new java.awt.Color(51, 102, 255));
        IngreApellido.setForeground(new java.awt.Color(204, 204, 204));
        IngreApellido.setText("Ingrese el apellido");
        IngreApellido.setBorder(null);
        IngreApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngreApellidoMousePressed(evt);
            }
        });

        Apellido.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Apellido.setText("Apellido");

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        IngreCorreo.setBackground(new java.awt.Color(51, 102, 255));
        IngreCorreo.setForeground(new java.awt.Color(204, 204, 204));
        IngreCorreo.setText("Ingrese el correo");
        IngreCorreo.setBorder(null);
        IngreCorreo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngreCorreoMousePressed(evt);
            }
        });
        IngreCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IngreCorreoKeyReleased(evt);
            }
        });

        Correo.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Correo.setText("Correo");

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        Materia.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        Materia.setText("Materia");

        IngreMateria.setBackground(new java.awt.Color(51, 102, 255));
        IngreMateria.setForeground(new java.awt.Color(204, 204, 204));
        IngreMateria.setText("Ingrese la materia");
        IngreMateria.setBorder(null);
        IngreMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngreMateriaMousePressed(evt);
            }
        });

        LimpiarPanel.setBackground(java.awt.Color.gray);

        Limpiarbtn.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        Limpiarbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Limpiarbtn.setText("LIMPIAR");
        Limpiarbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpiarbtn.setFocusable(false);
        Limpiarbtn.setMaximumSize(new java.awt.Dimension(32767, 32767));
        Limpiarbtn.setMinimumSize(new java.awt.Dimension(100, 100));
        Limpiarbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LimpiarbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LimpiarbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LimpiarbtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout LimpiarPanelLayout = new javax.swing.GroupLayout(LimpiarPanel);
        LimpiarPanel.setLayout(LimpiarPanelLayout);
        LimpiarPanelLayout.setHorizontalGroup(
            LimpiarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LimpiarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Limpiarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        LimpiarPanelLayout.setVerticalGroup(
            LimpiarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LimpiarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Limpiarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblAviso.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        lblAviso.setForeground(new java.awt.Color(255, 0, 0));
        lblAviso.setText("Correo no valido");

        IngreMatricula.setBackground(new java.awt.Color(51, 102, 255));
        IngreMatricula.setBorder(null);
        IngreMatricula.setForeground(new java.awt.Color(204, 204, 204));
        IngreMatricula.setText("Ingrese la matricula");
        IngreMatricula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngreMatriculaMousePressed(evt);
            }
        });

        javax.swing.GroupLayout BordeLateralIzquierdoLayout = new javax.swing.GroupLayout(BordeLateralIzquierdo);
        BordeLateralIzquierdo.setLayout(BordeLateralIzquierdoLayout);
        BordeLateralIzquierdoLayout.setHorizontalGroup(
            BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BordeLateralIzquierdoLayout.createSequentialGroup()
                .addGroup(BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BordeLateralIzquierdoLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IngreMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Matricula)
                                .addComponent(jSeparator1)
                                .addComponent(IngreNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                .addComponent(jSeparator2)
                                .addComponent(Nombre)
                                .addComponent(IngreApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                .addComponent(Apellido)
                                .addComponent(jSeparator3)
                                .addComponent(IngreCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                .addGroup(BordeLateralIzquierdoLayout.createSequentialGroup()
                                    .addComponent(Correo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblAviso))
                                .addComponent(jSeparator4)
                                .addComponent(jSeparator5)
                                .addComponent(Materia)
                                .addComponent(IngreMateria, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))))
                    .addGroup(BordeLateralIzquierdoLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(LimpiarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        BordeLateralIzquierdoLayout.setVerticalGroup(
            BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BordeLateralIzquierdoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(Matricula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Apellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(BordeLateralIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Correo)
                    .addComponent(lblAviso, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Materia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(LimpiarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        IngreMatricula.getAccessibleContext().setAccessibleName("");
        try{
            MaskFormatter mf = new MaskFormatter("####-####");
            mf.setPlaceholder(" ");
            IngreMatricula.setFormatterFactory(new DefaultFormatterFactory(mf));
            IngreMatricula.setForeground(Color.black);
        }catch(ParseException pex){
            System.out.println(pex);
        }

        Bg.add(BordeLateralIzquierdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 290, 620));

        BordeInferior.setBackground(new java.awt.Color(0, 0, 0));

        PanelCrear.setBackground(java.awt.Color.gray);

        btnCrear.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        btnCrear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCrear.setText("Crear");
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCrearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCrearMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelCrearLayout = new javax.swing.GroupLayout(PanelCrear);
        PanelCrear.setLayout(PanelCrearLayout);
        PanelCrearLayout.setHorizontalGroup(
            PanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        PanelCrearLayout.setVerticalGroup(
            PanelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        PanelBuscar.setBackground(java.awt.Color.gray);

        btnBuscar.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        btnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscar.setText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelBuscarLayout = new javax.swing.GroupLayout(PanelBuscar);
        PanelBuscar.setLayout(PanelBuscarLayout);
        PanelBuscarLayout.setHorizontalGroup(
            PanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        PanelBuscarLayout.setVerticalGroup(
            PanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        PanelEliminar.setBackground(java.awt.Color.gray);

        BtnEliminar.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        BtnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnEliminar.setText("Eliminar");
        BtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEliminar.setEnabled(false);
        BtnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnEliminarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelEliminarLayout = new javax.swing.GroupLayout(PanelEliminar);
        PanelEliminar.setLayout(PanelEliminarLayout);
        PanelEliminarLayout.setHorizontalGroup(
            PanelEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        PanelEliminarLayout.setVerticalGroup(
            PanelEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        PanelModificar.setBackground(java.awt.Color.gray);

        BtnModificar.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        BtnModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnModificar.setText("Modificar");
        BtnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnModificar.setEnabled(false);
        BtnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnModificarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnModificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnModificarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelModificarLayout = new javax.swing.GroupLayout(PanelModificar);
        PanelModificar.setLayout(PanelModificarLayout);
        PanelModificarLayout.setHorizontalGroup(
            PanelModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        PanelModificarLayout.setVerticalGroup(
            PanelModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        PanelListar.setBackground(java.awt.Color.gray);

        btnListar.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        btnListar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnListar.setText("Listar");
        btnListar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelListarLayout = new javax.swing.GroupLayout(PanelListar);
        PanelListar.setLayout(PanelListarLayout);
        PanelListarLayout.setHorizontalGroup(
            PanelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnListar, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
        );
        PanelListarLayout.setVerticalGroup(
            PanelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnListar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        Buscar.setBackground(new java.awt.Color(0, 0, 0));
        Buscar.setForeground(new java.awt.Color(102, 102, 102));
        Buscar.setText("Ingresar dato");
        Buscar.setBorder(null);
        Buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BuscarMousePressed(evt);
            }
        });
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Filtro.setBackground(new java.awt.Color(0, 0, 0));
        Filtro.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        Filtro.setForeground(new java.awt.Color(255, 255, 255));
        Filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mostrar todo", "Matricula", "Nombre", "Apellido", "Correo", "Materia" }));
        Filtro.setAutoscrolls(true);
        Filtro.setBorder(null);
        Filtro.setOpaque(true);

        javax.swing.GroupLayout BordeInferiorLayout = new javax.swing.GroupLayout(BordeInferior);
        BordeInferior.setLayout(BordeInferiorLayout);
        BordeInferiorLayout.setHorizontalGroup(
            BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BordeInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jSeparator6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Filtro, 0, 113, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelListar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );
        BordeInferiorLayout.setVerticalGroup(
            BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BordeInferiorLayout.createSequentialGroup()
                .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BordeInferiorLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PanelEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PanelModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(BordeInferiorLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BordeInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        Bg.add(BordeInferior, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 560, 710, 140));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", ""
            }
        ));
        Tabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TablaFocusLost(evt);
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);

        Bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 680, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Bg, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IngreNombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngreNombreMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreNombre.getText().equals("Ingrese el nombre")) {
            IngreNombre.setText("");
            IngreNombre.setForeground(Color.black);
        }

        if (IngreApellido.getText().isEmpty()) {
            IngreApellido.setText("Ingrese el apellido");
            IngreApellido.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().isEmpty()) {
            IngreCorreo.setText("Ingrese el correo");
            IngreCorreo.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreMateria.getText().isEmpty()) {
            IngreMateria.setText("Ingrese la materia");
            IngreMateria.setForeground(Color.LIGHT_GRAY);
        }
        if (Buscar.getText().isEmpty()) {
            Buscar.setText("Ingresar dato");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().equals("Ingrese el correo")) {
            lblAviso.setVisible(false);
        }

    }//GEN-LAST:event_IngreNombreMousePressed

    private void IngreApellidoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngreApellidoMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreNombre.getText().isEmpty()) {
            IngreNombre.setText("Ingrese el nombre");
            IngreNombre.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreApellido.getText().equals("Ingrese el apellido")) {
            IngreApellido.setText("");
            IngreApellido.setForeground(Color.black);
        }
        if (IngreCorreo.getText().isEmpty()) {
            IngreCorreo.setText("Ingrese el correo");
            IngreCorreo.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreMateria.getText().isEmpty()) {
            IngreMateria.setText("Ingrese la materia");
            IngreMateria.setForeground(Color.LIGHT_GRAY);
        }
        if (Buscar.getText().isEmpty()) {
            Buscar.setText("Ingresar dato");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().equals("Ingrese el correo")) {
            lblAviso.setVisible(false);
        }
    }//GEN-LAST:event_IngreApellidoMousePressed

    private void IngreCorreoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngreCorreoMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreNombre.getText().isEmpty()) {
            IngreNombre.setText("Ingrese el nombre");
            IngreNombre.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreApellido.getText().isEmpty()) {
            IngreApellido.setText("Ingrese el apellido");
            IngreApellido.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().equals("Ingrese el correo")) {
            IngreCorreo.setText("");
            IngreCorreo.setForeground(Color.black);

        }
        if (IngreMateria.getText().isEmpty()) {
            IngreMateria.setText("Ingrese la materia");
            IngreMateria.setForeground(Color.LIGHT_GRAY);
        }
        if (Buscar.getText().isEmpty()) {
            Buscar.setText("Ingresar dato");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }


    }//GEN-LAST:event_IngreCorreoMousePressed

    private void IngreMateriaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngreMateriaMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreNombre.getText().isEmpty()) {
            IngreNombre.setText("Ingrese el nombre");
            IngreNombre.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreApellido.getText().isEmpty()) {
            IngreApellido.setText("Ingrese el apellido");
            IngreApellido.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().isEmpty()) {
            IngreCorreo.setText("Ingrese el correo");
            IngreCorreo.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreMateria.getText().equals("Ingrese la materia")) {
            IngreMateria.setText("");
            IngreMateria.setForeground(Color.black);
        }
        if (Buscar.getText().isEmpty()) {
            Buscar.setText("Ingresar dato");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().equals("Ingrese el correo")) {
            lblAviso.setVisible(false);
        }
    }//GEN-LAST:event_IngreMateriaMousePressed

    private void ExitbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitbtnMouseEntered

    }//GEN-LAST:event_ExitbtnMouseEntered

    private void LimpiarbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarbtnMouseEntered
        LimpiarPanel.setBackground(Color.red);
    }//GEN-LAST:event_LimpiarbtnMouseEntered

    private void LimpiarbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarbtnMouseExited
        LimpiarPanel.setBackground(Color.gray);
    }//GEN-LAST:event_LimpiarbtnMouseExited
//Boton para cerrar el programa o volver a la pantalla de inicio
    private void ExitbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitbtnMouseClicked
        int seleccion = JOptionPane.showOptionDialog(null, "¿Estás seguro de que quieres cerrar sesión?",
                "Cerrar Sesión", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.WARNING_MESSAGE, null,
                new Object[]{"Si", "No", "Salir del programa"}, "opcion 1");

        if (seleccion == 0) {
            Login login = new Login();
            login.setVisible(true);
            this.dispose();
        }
        if (seleccion == 2) {
            System.exit(0);
        }


    }//GEN-LAST:event_ExitbtnMouseClicked

    private void BtnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEliminarMouseEntered
        PanelEliminar.setBackground(Color.red);
    }//GEN-LAST:event_BtnEliminarMouseEntered

    private void BtnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEliminarMouseExited
        PanelEliminar.setBackground(Color.gray);
    }//GEN-LAST:event_BtnEliminarMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        PanelBuscar.setBackground(Color.blue);
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        PanelBuscar.setBackground(Color.gray);
    }//GEN-LAST:event_btnBuscarMouseExited

    private void BtnModificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnModificarMouseEntered
        PanelModificar.setBackground(Color.green);
    }//GEN-LAST:event_BtnModificarMouseEntered

    private void BtnModificarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnModificarMouseExited
        PanelModificar.setBackground(Color.gray);
    }//GEN-LAST:event_BtnModificarMouseExited

    private void btnListarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarMouseEntered
        PanelListar.setBackground(Color.green);
    }//GEN-LAST:event_btnListarMouseEntered

    private void btnListarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarMouseExited
        PanelListar.setBackground(Color.gray);
    }//GEN-LAST:event_btnListarMouseExited

    private void LimpiarbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarbtnMouseClicked
        //Limpia los datos
        LimpiarDatos();
    }//GEN-LAST:event_LimpiarbtnMouseClicked

    private void lblMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseClicked
        //Minimza la ventana
        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_lblMinimizarMouseClicked

    private void lblMinimizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseEntered
        //Cambia el color de la letra a gris cuando el cursor está encima
        lblMinimizar.setForeground(Color.gray);
    }//GEN-LAST:event_lblMinimizarMouseEntered

    private void lblMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseExited
        //Cambia el color de la letra blanco cuando el cursor no está encima
        lblMinimizar.setForeground(Color.white);
    }//GEN-LAST:event_lblMinimizarMouseExited

    private void BuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreMatricula.getText().isEmpty()) {
            IngreMatricula.setText("Ingrese la matricula");
            IngreMatricula.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreNombre.getText().isEmpty()) {
            IngreNombre.setText("Ingrese el nombre");
            IngreNombre.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreApellido.getText().isEmpty()) {
            IngreApellido.setText("Ingrese el apellido");
            IngreApellido.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().isEmpty()) {
            IngreCorreo.setText("Ingrese el correo");
            IngreCorreo.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreMateria.getText().isEmpty()) {
            IngreMateria.setText("Ingrese la materia");
            IngreMateria.setForeground(Color.LIGHT_GRAY);
        }
        if (Buscar.getText().equals("Ingresar dato")) {
            Buscar.setText("");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_BuscarMousePressed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarActionPerformed
//Seleccionar fila
    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked

        BtnModificar.setEnabled(true);
        BtnEliminar.setEnabled(true);
        btnCrear.setEnabled(false);

        int fila = this.Tabla.getSelectedRow();

        this.IngreMatricula.setText(this.Tabla.getValueAt(fila, 1).toString());
        this.IngreNombre.setText(this.Tabla.getValueAt(fila, 2).toString());
        this.IngreApellido.setText(this.Tabla.getValueAt(fila, 3).toString());
        this.IngreCorreo.setText(this.Tabla.getValueAt(fila, 4).toString());
        this.IngreMateria.setText(this.Tabla.getValueAt(fila, 5).toString());

        if (EmailValidator.getInstance().isValid(IngreCorreo.getText())) {

            lblAviso.setVisible(false);

        } else {

            lblAviso.setVisible(true);
        }

    }//GEN-LAST:event_TablaMouseClicked
//Modifica uno o varios campos deseados de la fila seleccionada
    private void BtnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnModificarMouseClicked
        //Hace la conexión a la base de datos
        conectar();
        PreparedStatement ps = null;
        if (lblAviso.isVisible() == true) {
            JOptionPane.showMessageDialog(null, "Escriba el correo correctamente");
        } else {
            try {

                int fila = this.Tabla.getSelectedRow();

                ps = connect.prepareStatement("UPDATE Estudiante set Matricula =" + IngreMatricula.getText() + ", Nombre = '"
                        + IngreNombre.getText() + "', Apellido = '" + IngreApellido.getText() + "', Correo = '" + IngreCorreo.getText()
                        + "', Materia = '" + IngreMateria.getText() + "' where ID =" + this.Tabla.getValueAt(fila, 0));
                int indice = ps.executeUpdate();
                if (indice > 0) {
                    BtnModificar.setEnabled(false);
                    btnCrear.setEnabled(true);
                    BtnEliminar.setEnabled(false);
                    mostrarDatos();
                    LimpiarDatos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No ha seleccionado ningun registro a borrar.");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al actualizar datos: " + ex);
            } finally {
                try {
                    if (ps != null) {
                        ps.close();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);

                }
            }
        }
    }//GEN-LAST:event_BtnModificarMouseClicked
//Elimina la fila seleccionada
    private void BtnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEliminarMouseClicked
        // Realiza la conexión a la base de datos
        conectar();
        PreparedStatement ps = null;
        try {
            int fila = this.Tabla.getSelectedRow();

            ps = connect.prepareStatement("delete from Estudiante where ID= " + this.Tabla.getValueAt(fila, 0));
            int indice = ps.executeUpdate();
            if (indice > 0) {
                BtnModificar.setEnabled(false);
                btnCrear.setEnabled(true);
                BtnEliminar.setEnabled(false);
                mostrarDatos();
                LimpiarDatos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No ha seleccionado ningun registro a borrar.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al eliminar datos: " + ex);

        } finally {
            try {
                if (ps != null) {
                    ps.close();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);

            }
        }
    }//GEN-LAST:event_BtnEliminarMouseClicked

    private void btnListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarMouseClicked
        //Muestra la tabla completa
        mostrarDatos();
    }//GEN-LAST:event_btnListarMouseClicked
//Busca en la tabla los datos ingresados
    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        if (!Buscar.getText().isEmpty()) {
            //Hace la conexión a la base de datos
            conectar();

            String busqueda = Buscar.getText().toString();
            String variable;

            if (Filtro.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(this, "Debe seleccionar otra opcion");
            } else if (Filtro.getSelectedIndex() == 1) {
                variable = "Matricula";
                try {
                    MostrarBuscador(busqueda, variable);

                } catch (Exception e) {
                }
            } else if (Filtro.getSelectedIndex() == 2) {
                variable = "Nombre";
                try {
                    MostrarBuscador(busqueda, variable);

                } catch (Exception e) {
                }
            } else if (Filtro.getSelectedIndex() == 3) {
                variable = "Apellido";
                try {
                    MostrarBuscador(busqueda, variable);

                } catch (Exception e) {
                }
            } else if (Filtro.getSelectedIndex() == 4) {
                variable = "Correo";
                try {
                    MostrarBuscador(busqueda, variable);

                } catch (Exception e) {
                }
            } else if (Filtro.getSelectedIndex() == 5) {
                variable = "Materia";
                try {
                    MostrarBuscador(busqueda, variable);

                } catch (Exception e) {
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Tiene que ingresar un dato");

        }

    }//GEN-LAST:event_btnBuscarMouseClicked
//Valida la escritura correcta del correo
    private void IngreCorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IngreCorreoKeyReleased
        if (EmailValidator.getInstance().isValid(IngreCorreo.getText())) {

            lblAviso.setVisible(false);

        } else {

            lblAviso.setVisible(true);
        }
        if (IngreCorreo.getText().isEmpty()) {
            lblAviso.setVisible(false);
        }
    }//GEN-LAST:event_IngreCorreoKeyReleased


    private void IngreMatriculaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngreMatriculaMousePressed
        //Da efecto de PlaceHolder a la caja de texto.
        if (IngreCorreo.getText().equals("Ingrese el correo")) {
            lblAviso.setVisible(false);
        }
        IngreMatricula.setForeground(Color.black);
        if (IngreMatricula.getText().isEmpty()) {
            IngreMatricula.setText("Ingrese la matricula");
            IngreMatricula.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreNombre.getText().isEmpty()) {
            IngreNombre.setText("Ingrese el nombre");
            IngreNombre.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreApellido.getText().isEmpty()) {
            IngreApellido.setText("Ingrese el apellido");
            IngreApellido.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreCorreo.getText().isEmpty()) {
            IngreCorreo.setText("Ingrese el correo");
            IngreCorreo.setForeground(Color.LIGHT_GRAY);
        }
        if (IngreMateria.getText().isEmpty()) {
            IngreMateria.setText("Ingrese la materia");
            IngreMateria.setForeground(Color.LIGHT_GRAY);
        }
        if (Buscar.getText().equals("Ingresar dato")) {
            Buscar.setText("");
            Buscar.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_IngreMatriculaMousePressed

    private void btnCrearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseExited
        //Cambia el color del fondo a gris cuando el cursor no está encima del botón
        PanelCrear.setBackground(Color.gray);
    }//GEN-LAST:event_btnCrearMouseExited

    private void btnCrearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseEntered
        //Cambia el color del fondo a verde cuando el cursor posa encima del boton
        PanelCrear.setBackground(Color.green);
    }//GEN-LAST:event_btnCrearMouseEntered

    //Ingresa nuevos campos a la tabla
    private void btnCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseClicked
        //Conexión a la base de datos
        conectar();
        PreparedStatement ps = null;
        if (IngreNombre.getText().equals("Ingrese el nombre") || IngreApellido.getText().equals("Ingrese el apellido")
                || IngreCorreo.getText().equals("Ingrese el correo") || IngreMateria.getText().equals("Ingrese la materia") || IngreMatricula.getText().equals("    -    ")) {
            JOptionPane.showMessageDialog(null, "No puede dejar ningun campo vacío");
        } else {
            if (lblAviso.isVisible() == true) {
                JOptionPane.showMessageDialog(null, "Escriba el correo correctamente");
            } else {
                try {
                    ps = connect.prepareStatement("INSERT INTO Estudiante (matricula, nombre, apellido, correo, materia) VALUES (?,?,?,?,?)");
                    ps.setString(1, IngreMatricula.getText());
                    ps.setString(2, IngreNombre.getText());
                    ps.setString(3, IngreApellido.getText());
                    ps.setString(4, IngreCorreo.getText());
                    ps.setString(5, IngreMateria.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Registro realizado con exito.");
                    mostrarDatos();

                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(rootPane, "Error en la consulta: " + ex);
                } finally {
                    try {
                        if (ps != null) {
                            ps.close();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);

                    }
                }
            }
        }

    }//GEN-LAST:event_btnCrearMouseClicked

//Variables de tipo entero donde se almacenará la posición del mouse.
    int xx, xy;
    private void BordeSuperiorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BordeSuperiorMousePressed
        //Obtendrá la posición X e Y del mouse cuando la presionemos.
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_BordeSuperiorMousePressed

    private void BordeSuperiorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BordeSuperiorMouseDragged
        //Obtendrá la posición X e Y de la pantalla 
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //Restar la posción del a pantalla con la posición del mouse.
        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_BordeSuperiorMouseDragged

    private void TablaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaFocusLost
        //Activo el botón crear cuando la tabla pierde el focus
        btnCrear.setEnabled(true);
    }//GEN-LAST:event_TablaFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Diseño().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Apellido;
    private javax.swing.JPanel Bg;
    private javax.swing.JPanel BordeInferior;
    private javax.swing.JPanel BordeLateralIzquierdo;
    private javax.swing.JPanel BordeSuperior;
    private javax.swing.JLabel BtnEliminar;
    private javax.swing.JLabel BtnModificar;
    private javax.swing.JTextField Buscar;
    private javax.swing.JLabel Correo;
    private javax.swing.JLabel Exitbtn;
    private javax.swing.JComboBox<String> Filtro;
    private javax.swing.JTextField IngreApellido;
    private javax.swing.JTextField IngreCorreo;
    private javax.swing.JTextField IngreMateria;
    private javax.swing.JFormattedTextField IngreMatricula;
    private javax.swing.JTextField IngreNombre;
    private javax.swing.JPanel LimpiarPanel;
    private javax.swing.JLabel Limpiarbtn;
    private javax.swing.JLabel Materia;
    private javax.swing.JLabel Matricula;
    private javax.swing.JLabel Nombre;
    private javax.swing.JPanel PanelBuscar;
    private javax.swing.JPanel PanelCrear;
    private javax.swing.JPanel PanelEliminar;
    private javax.swing.JPanel PanelListar;
    private javax.swing.JPanel PanelModificar;
    private javax.swing.JLabel Perfil1;
    public javax.swing.JLabel Rol1;
    private javax.swing.JTable Tabla;
    public javax.swing.JLabel Usuario1;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnCrear;
    private javax.swing.JLabel btnListar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblMinimizar;
    // End of variables declaration//GEN-END:variables

    //Muestra los datos en la tabla
    private void mostrarDatos() {

        conectar();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Matricula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Correo");
        modelo.addColumn("Materia");
        Tabla.setModel(modelo);
        String consultaSql = "select * from Estudiante";
        String data[] = new String[7];

        Statement st;

        try {
            st = (Statement) connect.createStatement();
            ResultSet rs = st.executeQuery(consultaSql);
            while (rs.next()) {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);
                data[4] = rs.getString(5);
                data[5] = rs.getString(6);
                modelo.addRow(data);
            }

            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error en la consulta: " + ex);
        }

    }

    //Conexión a la base de datos
    public Connection conectar() {
        try {
            connect = DriverManager.getConnection(url);

        } catch (Exception x) {
            JOptionPane.showMessageDialog(null, x.getMessage().toString());

        }
        return connect;
    }

    //Limpia todos los datos de los campos de texto.
    public void LimpiarDatos() {

        IngreMatricula.setText("");
        IngreMatricula.setForeground(Color.LIGHT_GRAY);
        IngreNombre.setText("Ingrese el nombre");
        IngreNombre.setForeground(Color.LIGHT_GRAY);
        IngreApellido.setText("Ingrese el apellido");
        IngreApellido.setForeground(Color.LIGHT_GRAY);
        IngreCorreo.setText("Ingrese el correo");
        IngreCorreo.setForeground(Color.LIGHT_GRAY);
        IngreMateria.setText("Ingrese la materia");
        IngreMateria.setForeground(Color.LIGHT_GRAY);
    }

    //Mostrar resultados de la busqueda en la tabla  
    public void MostrarBuscador(String busqueda, String variable) {
        //Método que hace la conexión a la base de datos
        conectar();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Matricula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Correo");
        modelo.addColumn("Materia");
        Tabla.setModel(modelo);
        String consultaSql = "select * from Estudiante where " + variable + " like '%" + busqueda + "%' ";
        String data[] = new String[7];

        Statement st;
        ResultSet rs = null;
        try {
            st = (Statement) connect.createStatement();
            rs = st.executeQuery(consultaSql);
            while (rs.next()) {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);
                data[4] = rs.getString(5);
                data[5] = rs.getString(6);
                modelo.addRow(data);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error en la consulta: " + ex);
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);

            }

        }
    }

}
